name: Reformat Code

on:
  push:
  pull_request:

jobs:
  quality:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup Biome
        uses: biomejs/setup-biome@v2
        with:
          version: latest
      - name: Run Biome
        id: biome
        run: biome ci . || echo "BIOME_FAILED=true" >> $GITHUB_ENV
      - name: Set job status
        if: env.BIOME_FAILED == 'true'
        run: exit 1

  format:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    needs: [quality]
    if: ${{always() && needs.quality.result == 'failure'}}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup Biome
        uses: biomejs/setup-biome@v2
        with:
          version: latest
      - name: Autoformat Code
        run: biome format --write .
      - name: Commit and Push
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git add .
          git diff --quiet && git diff --staged --quiet || (git commit -m "chore: autoformat code" && git push origin biome-install)

  rerun-quality:
    runs-on: ubuntu-latest
    needs: [quality, format]
    if: ${{always() && needs.quality.result == 'failure'}}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup Biome
        uses: biomejs/setup-biome@v2
        with:
          version: latest
      - name: Run Biome
        run: biome ci .

  final-check:
    runs-on: ubuntu-latest
    needs: [quality, format]
    if: always()
    steps:
      - name: Success
        if: needs.quality.result == 'success' || (needs.quality.result == 'failure' && needs.format.result == 'success')
        run: exit 0
      - name: Failure
        if: needs.quality.result == 'failure' && needs.format.result != 'success'
        run: exit 1

